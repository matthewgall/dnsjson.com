apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${NAME}
  labels:
    app: ${NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${NAME}
  template:
    metadata:
      labels:
        app: ${NAME}
    spec:
      containers:
      - name: ${NAME}
        image: ${IMAGE}:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
          - name: HOST
            value: '0.0.0.0'
          - name: REDIS
            value: redis://${NAME}-redis.${NAMESPACE}.svc.cluster.local:6379
          - name: RESOLVER
            value: '1.1.1.1'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${NAME}-redis
  labels:
    app: ${NAME}-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${NAME}-redis
  template:
    metadata:
      labels:
        app: ${NAME}-redis
    spec:
      containers:
      - name: ${NAME}-redis
        image: redis:latest
        ports:
        - containerPort: 6379
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${NAME}-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    "use-cloudflare-solver": "true"
spec:
  rules:
  - host: "*.dnsjson.com"
    http:
      paths:
      - path: /
        backend:
          serviceName: ${NAME}
          servicePort: http
  - host: "dnsjson.com"
    http:
      paths:
      - path: /
        backend:
          serviceName: ${NAME}
          servicePort: http
  tls:
  - hosts:
    - '*.dnsjson.com'
    - 'dnsjson.com'
    secretName: ${NAME}-cert
---
apiVersion: v1
kind: Service
metadata:
  name: ${NAME}
spec:
  ports:
  - name: http
    targetPort: 5000
    port: 80
  selector:
    app: ${NAME}
---
apiVersion: v1
kind: Service
metadata:
  name: ${NAME}-redis
spec:
  ports:
  - name: tcp
    targetPort: 6379
    port: 6379
  selector:
    app: ${NAME}-redis